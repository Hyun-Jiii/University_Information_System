/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oop2.lecture;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author User
 */
public class Exchange_Lecture extends javax.swing.JFrame {
    String id;
    ArrayList<Course> lecList = new ArrayList<>();
    /**
     * Creates new form Exchange_Lecture
     */
    public Exchange_Lecture(String id)  {
        initComponents();
        lecture_num.setEnabled(false);
        this.id = id;
        try {
            setInfo(id);
            addList();
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void addList() throws FileNotFoundException, UnsupportedEncodingException, IOException{ //파일에 있는 내용을 수업 객체리스트로 생성
        String str;
        String[] key;
        //int co = 0;
        BufferedReader read = new BufferedReader(new InputStreamReader(new FileInputStream("insertlecturelist.txt"), "euc-kr"));
        while((str = read.readLine()) != null){
            key = str.split("/");
            lecList.add(new Course(key[0],key[1],null,key[2],key[3],key[4],null,null,false));
        }
        read.close();
        //return co;
    }
    
    public void setInfo(String id) throws FileNotFoundException, UnsupportedEncodingException, IOException{ //GUI화면에 선택한 정보 화면에 출력
        String str;
        String[] key = null;
        int comboIndex = 0;
        BufferedReader read = new BufferedReader(new InputStreamReader(new FileInputStream("insertlecturelist.txt"), "euc-kr"));
        while((str = read.readLine()) != null){
            if(str.contains(id)) //id값이 포함되어 있으면
                key = str.split("/");
        }
        switch(key[2]){ //콤보박스에 따라 정보 저장
            case "전산학과":
                comboIndex = 0; break;
            case "전자공학과":
                comboIndex = 1; break;
            case "화학공학과":
                comboIndex = 2; break;
            case "기계공학과":
                comboIndex = 3; break;
            case "항공우주공학과":
                comboIndex = 4; break;
        }
        lecture_num.setText(key[0]);
        lecture_name.setText(key[1]);
        depart_list.setSelectedIndex(comboIndex);
        getGrade.setText(key[3]);
        lecture_info.setText(key[4]);
        read.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        insert = new javax.swing.JButton();
        goback = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lecture_info = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lecture_name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        getGrade = new javax.swing.JTextField();
        lecture_num = new javax.swing.JTextField();
        depart_list = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("강의정보 수정");
        setPreferredSize(new java.awt.Dimension(301, 497));
        setSize(new java.awt.Dimension(301, 497));

        jLabel1.setFont(new java.awt.Font("굴림", 1, 18)); // NOI18N
        jLabel1.setText("강의 정보 수정");

        insert.setText("수정");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        goback.setText("뒤로가기");
        goback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gobackActionPerformed(evt);
            }
        });

        jLabel7.setText("강좌 설명");

        jLabel3.setText("강좌 이름");

        jLabel4.setText("담당 학과");

        jLabel6.setText("학  점");

        jLabel5.setText("강좌 번호");

        depart_list.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "전산학과", "전자공학과", "화학공학과", "기계공학과", "항공우주공학과" }));

        jLabel8.setText("원하는 정보를 수정하여 주세요");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(goback, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lecture_num, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(lecture_name)
                                    .addComponent(getGrade)
                                    .addComponent(depart_list, 0, 1, Short.MAX_VALUE)))
                            .addComponent(lecture_info, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(85, 85, 85))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lecture_num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lecture_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(depart_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(getGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lecture_info, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(insert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goback)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        FileOutputStream file;
        String str;
        
        try {
            for(int i = 0; i < lecList.size(); i++){
                if(lecList.get(i).getCourseNum().equals(id)){
                    lecList.get(i).setCourseName(lecture_name.getText());
                    lecList.get(i).setDepartment(depart_list.getSelectedItem().toString());
                    lecList.get(i).setGrade(getGrade.getText());
                    lecList.get(i).setCourse_content(lecture_info.getText());
                }
            }
            
            file = new FileOutputStream("insertlecturelist.txt");
            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter((file), "euc-kr"));
            /*
            for(Course a : lecList){
                str = String.format("%s/%s/%s/%s/%/s/%s%n", a.getCourseNum(),a.getCourseName(), a.getDepartment(), a.getGrade(), a.getCourse_content(), a.isOpen());
                writer.write(str);
            }
            */
            for(int i = 0; i < lecList.size(); i++ ){
                str = String.format("%s/%s/%s/%s/%s/%s%n", lecList.get(i).getCourseNum(),lecList.get(i).getCourseName(),lecList.get(i).getDepartment(), lecList.get(i).getGrade(),lecList.get(i).getCourse_content(),lecList.get(i).isOpen());
                writer.write(str);
            }
            writer.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_insertActionPerformed

    private void gobackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gobackActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_gobackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> depart_list;
    private javax.swing.JTextField getGrade;
    private javax.swing.JButton goback;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField lecture_info;
    private javax.swing.JTextField lecture_name;
    private javax.swing.JTextField lecture_num;
    // End of variables declaration//GEN-END:variables
}
